1. Inheritance is a machanism in which a class inherits features from another class.
   Class which inherits are calles as child/derived class.
   Class which are being inherited are called as parent/base class.

2. It is done to avoid duplication of codes. So if child class needs the same features as parent class
   along with additional features then it inherits the features of parent class and we write the code for 
   only unique features in child class.

3.class ChilName : access_mode ParentClass1 , access_mode ParentClass2
{
    ..
};

4. Access Modes:
   All the private members of parent class is not availble in derived class.
   Though it creates a full copy of parent object and those members are availble in 
   parent class.
   i> private
   all the public and protected members of base class becomes private members for derived class object.

   ii> protected
   All the public and protected members of base class becomes protected members for derived class object.

   iii> public
   All the public members of base class remains public and protected members remains protected for child class.

5. order of constructors:
   All the parent class constructors must be called from left to right(by default) and then child class constructor is used.
   If the parent class has parametrized constructor, then it should be called using list initializer.

6. List initializer 
   ClassName(): constructor1(), constructor2(), .. , constructorn()

7. Use of list initializer:
   case 1: To call parent class constructor
   ClassName(): ParentClass(args) {}

   case 2: To initialise const and & data members, can only be initialised through list initialiser
   ClassName(): var_name(value) {};

   case 3: Other data members can be initialised this way too but is optional and is effective.

8.Types of Inheritance:
  i> Single Inheritance
  Class Dog is inheriting from Class Animal.

  ii> Multiple Inheritance
  Class Allrounder is inheriting from class Batsman and from class bowler.

  iii> Hierarchical Inheritance
  Multiple class is derived from a Single base class.
  Class Human, Dog, Cows and many other are derived from mammal.

  iv> Multilevel Inheritance
  son is inheriting from father and father is inheriting from grandfather.

  v> Hybrid inheritance (Virtual Inheritance)
  Mix of more than one inheritance.
  class mammal 
  class Human: mammal
  class Animal: mammal 
  class Male: human 
  class Female : humna 
  class Dog: Animal 
  Class Cat: Animal 

9. Diamond Problem
   When the 2 or more than 2 super class of a derived class inherits from a common base class, it
   creates ambguity as common base class constructor is called more than one.
   Solution is Virtual inheritance.

10. class A: virtual public B {};
   -> B is a virtual base inheritance class. So, B's constructor will be called only once;

11. Order of constructor call:
    i> all virtual class constructor get called from the most derived class. If most derived class does'nt call the virtual class 
    constructor. It will throw error.

    ii> all non virtual base class constructor get called in order of declaration. It throws an error if a derived class don't call a 
    parent class constructor and parent class has explicit constructor.

    iii> all data members initialised in order of declaration.
    
    iv> constructor function excuted.
    regardless of initialision list.

12 object Slicing
   In place of Base class object, it's derived class object can be used but it is sliced to remove the attributes which are not present in
   base class unless it is used as pointer or reference.

13 class ClassName final  {}; 
   ClassName can not inherited by any other class.
